/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CarReview as PrismaCarReview } from "@prisma/client";

export class CarReviewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CarReviewCountArgs, "select">
  ): Promise<number> {
    return this.prisma.carReview.count(args);
  }

  async carReviews<T extends Prisma.CarReviewFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarReviewFindManyArgs>
  ): Promise<PrismaCarReview[]> {
    return this.prisma.carReview.findMany<Prisma.CarReviewFindManyArgs>(args);
  }
  async carReview<T extends Prisma.CarReviewFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarReviewFindUniqueArgs>
  ): Promise<PrismaCarReview | null> {
    return this.prisma.carReview.findUnique(args);
  }
  async createCarReview<T extends Prisma.CarReviewCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarReviewCreateArgs>
  ): Promise<PrismaCarReview> {
    return this.prisma.carReview.create<T>(args);
  }
  async updateCarReview<T extends Prisma.CarReviewUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarReviewUpdateArgs>
  ): Promise<PrismaCarReview> {
    return this.prisma.carReview.update<T>(args);
  }
  async deleteCarReview<T extends Prisma.CarReviewDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarReviewDeleteArgs>
  ): Promise<PrismaCarReview> {
    return this.prisma.carReview.delete(args);
  }
}
