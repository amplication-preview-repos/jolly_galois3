/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CarReviewListRelationFilter } from "../../carReview/base/CarReviewListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { CarSpecificationListRelationFilter } from "../../carSpecification/base/CarSpecificationListRelationFilter";
import { EnumVariantFuelType } from "./EnumVariantFuelType";
import { StringFilter } from "../../util/StringFilter";
import { ModelWhereUniqueInput } from "../../model/base/ModelWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";

@InputType()
class VariantWhereInput {
  @ApiProperty({
    required: false,
    type: () => CarReviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CarReviewListRelationFilter)
  @IsOptional()
  @Field(() => CarReviewListRelationFilter, {
    nullable: true,
  })
  carReviews?: CarReviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CarSpecificationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CarSpecificationListRelationFilter)
  @IsOptional()
  @Field(() => CarSpecificationListRelationFilter, {
    nullable: true,
  })
  carSpecifications?: CarSpecificationListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumVariantFuelType,
  })
  @IsEnum(EnumVariantFuelType)
  @IsOptional()
  @Field(() => EnumVariantFuelType, {
    nullable: true,
  })
  fuelType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ModelWhereUniqueInput)
  @IsOptional()
  @Field(() => ModelWhereUniqueInput, {
    nullable: true,
  })
  model?: ModelWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  price?: FloatNullableFilter;
}

export { VariantWhereInput as VariantWhereInput };
